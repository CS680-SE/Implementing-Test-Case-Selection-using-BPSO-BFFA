

I. LITERATURE REVIEW 
According to  [1] they have proposed using Particle Swarm Optimization (PSO) to solve the TC selection problem. 
In their study, PSO was used to maximize requirement coverage and to assess the cost (execution effort) of the Test case selections. 
Researchers devised a constrained PSO method in which the execution effort serves as a search constraint and the fitness function is the requirements coverage. 
They created a Binary Constrained PSO (BCPSO) and a hybrid method, BCPSO-FS, that improved the performance of the BCPSO by combining the Forward Selection (FS) algorithm, also known as a greedy search strategy,
 with the BCPSO. BCPSO and BCPSO-FS outperformed the results obtained by a Random search in the experiments,
  proving the potential of applying PSO to TC selection. When compared to its individual components, 
  the BCPSO-FS performed well. The high performance of BCPSO-FS was achieved by combining the global search of BCPSO with the local search of the FS algorithm. 

In [2], the paper aims to present an improved test selection optimization model that considers the degree of ambiguity in fault isolation.
 The model makes use of a matrix of fault test dependency to model the relationship between system faults and test groups.
  In the proposed model the objective function is used to minimize the test cost under the constraints of Fault Detection Rate (FDR) and fault isolation rate (FIR).
   For solving the enhanced test selection optimization model, they are using the improved chaotic discrete particle swarm optimization (PSO) algorithm. 

In [3], Ant Colony and Hybrid Particle Swarm Optimization Algorithms are compared. In the instance of ACO, less than 11% of test cases were able to detect 84.2 percent of problems while requiring just 8.7% of total time,
 including the algorithm's execution time. The best of 30 runs was picked as the observed result for Mutation Probability 1 percent, 2 percent, and 5 percent, respectively, using a hybrid PSO algorithm with 30 particles and 500 iterations in each run. 
 In comparison to ACO, Hybrid PSO can detect 84.21 percent of problems with only 0.7 percent of total test cases, which is very cost-effective, even though the operating time of Hybrid PSO is much longer. 
 Both algorithms are clearly superior at selecting regression test cases, as evidenced by the results. In a variety of test circumstances, Hybrid PSO outperforms ACO, but it takes longer to run than ACO.
  During test case selection, they can save about 90% of the execution time.

In [4], the paper aims to present an improved test selection optimization model that considers the degree of ambiguity in fault isolation. The model makes use of a matrix of fault test dependency to model the  relationship between system faults and test groups. In the proposed model the objective function is used to minimize 
the test cost under the constraints of Fault Detection Rate (FDR) and fault isolation rate (FIR). For solving the enhanced test selection optimization model, 
 we are using the improved chaotic discrete particle swarm optimization(PSO) algorithm.
 
The method proposed by [5] is a hybrid method for reduction of  test cases using meta-heuristics. PSO uses particles' behavior as a 
basis, whereas GA employs evolutionary algorithms (EAs) for mutation operators. To conduct effective testing, one must select a minimal set 
of test cases that cover all possible faults and bugs in a short period. These activities can be effectively performed through regression testing. 
We present a detailed analysis of regression testing, its techniques, and meta-heuristic approaches used to select the minimum number of test cases
that cover all faults and bugs in the shortest amount of time. they discuss this in this paper.

The authors in this paper [6] proposed a hybrid approach which is a Hybrid Ant-Colony and Genetic Algorithm that can select test cases to reduce the cost and time of the development process without compromising the efficiency and test coverage of test case selection.
 The proposed approach is worked as follows: First they apply ACO over the component diagram, then over the results of ACO further apply GA then repeat until stop criteria are met. The output of this approach is a reduced set of test cases. It will have stopped if 
 it meets one of these criteria: the test cases limit total execution time; or by checking whether all the faults have been covered or not. The result of this technique shows that it can achieve 100% fault coverage in 33% of test cases.


The authors in this paper [7] developed two mechanisms for test case selection which considered two objectives: maximize branch covers while minimizing execution time. Their proposed work is based on multi-objective Particle Swarm Optimization that aims to optimize 
 two objectives at the same time. Also, they have created a hybrid multi-objective selection algorithm to improve the results. They developed hybrid algorithms by adding local search capabilities to the Binary Multi-Objective Particle Swarm Optimization with 
 Crowding distance and Roulette wheel algorithm. The local search explores the neighborhood solution to obtain the better one. They conclude that the local search mechanism indeed improved the algorithm, and the hybrid algorithms are competitive multi-objective 
 search strategies.

 In [8]the authors proposed modified probability formula of Ant colony optimization algorithm to get the best bath through enhance execution time with all faults covered. They prove the Effectiveness of proposed techniques through the Average Percentage Faults Detection (APFD) metric. 
 They compared test case selection and prioritization approach for modified ACO with the equivalent traditional ACO that found the modified ACO is providing effective than traditional ACO and has less execution time.

 In [9]the authors implemented the proposed ACO technique . that analyzed for forty runs of the tool on two C++ sample programs CollAdmission and HotelMgmnt. They evaluate the effectiveness of the ACO technique by applying APFD metrics .
 that compared the various order No order, Random order, Reverse order, Optimal order, and ACO order of the test cases. The selection and prioritization of the ACO technique show that results that are near to the optimum ordering .



Reference:
[1 ]L. Souza, R. Prudêncio, and F. Barros, A Constrained Particle Swarm Optimization Approach for Test Case Selection. 2010, p. 264.

[2] Lv, X., Zhou, D., Tang, Y. and Ma, L. (2018). An Improved Test Selection Optimization Model Based on Fault Ambiguity Group Isolation and Chaotic Discrete PSO. Complexity, 2018(-), pp.1–10.

[3] A. P. Agrawal and A. Kaur, “A Comprehensive Comparison of Ant Colony and Hybrid Particle Swarm Optimization Algorithms Through Test Case Selection,” in Data Engineering and Intelligent Computing, Singapore, 2018, pp. 397–405. doi: 10.1007/978-981-10-3223-3_38.

[4] Lv, X., Zhou, D., Tang, Y. and Ma, L. (2018). An Improved Test Selection Optimization Model Based on Fault Ambiguity Group Isolation and Chaotic Discrete PSO. Complexity, 2018(-), pp.1–10.

[5] R. Nagar, A. Kumar, S. Kumar and A. S. Baghel, "Implementing test case selection and reduction techniques using meta-heuristics," 2014 5th International Conference - Confluence The Next Generation Information Technology Summit (Confluence), 2014, pp. 837-842, doi: 10.1109/CONFLUENCE.2014.6949377.

[6] P. Palak and P. Gulia, “Hybrid swarm and GA based approach for software test case selection,” International Journal of Electrical and Computer Engineering, vol. 9, no. 6, p. 4898, 2019.

[7] L. S. De Souza, R. B. Prudêncio, and F. de A. Barros, “A hybrid binary multi-objective particle swarm optimization with local search for test case selection,” in 2014 Brazilian Conference on Intelligent Systems, 2014, pp. 414-419.

[8]	N. Sethi, S. Rani, and P. Singh, “Ants optimization for minimal test case selection and prioritization as to reduce the cost of regression testing,” Int. J. Comput. Appl., vol. 100, no. 17, pp. 48–54, 2014.

[9]	B. Suri and S. Singhal, “TEST CASE SELECTION & PRIORITIZATION USING ANT COLONY OPTIMIZATION,” in International Conference on Advanced Computing, Communication and Networks, Chandigarh, 2011, vol. 194.








